# This script expects Secret Variables to be defined in the Gitlab project CI/CD settings. The required variables can
# be found by examine the project setup: ansible/group_vars/hgi-systems-gitlab/vars.yml
---

# In general, additional variables should *not* be defined below unless they are
# required to process .gitlab-ci.yml itself (i.e. they are used in this file outside
# of the job scripts).
#
# To set or override a variable, create or edit a script in the before_scripts.d directory at
# either the repo level or in the hgi image creation subrepo. The contents of those
# two directories will be combined and the scripts sourced in "version" order (sort -V).
variables:
  GITHUB_REPO: "git@github.com:wtsi-hgi/hgi-systems.git"
  GITLAB_REPO: "git@gitlab.internal.sanger.ac.uk:hgi/hgi-systems.git"
  TF_LOG: "" # anything other than "" to trace
  CI_LOCK_PREFIX: "ci/locks"
  ANSIBLE_LOCK_PREFIX: "${CI_LOCK_PREFIX}/ansible"

.global-before-script: &global-before-script-def 'source "ci/source-before-scripts.sh" "ci/before_scripts.d"'
before_script:
  - *global-before-script-def

stages:
  - ci-setup
  - bootstrap-validate
  - bootstrap
  - validate
  - terraform-core
  - terraform
  - ansible-core
  - ansible
  - sync

###############################################################################
# Helper YAML definitions
###############################################################################
.production-zeta-hgi-core: &production-zeta-hgi-core-def
  variables:
    ENV: "production"
    REGION: "zeta"
    SETUP: "hgi-core"
  only:
    - master
    - production-zeta-hgi-core
  
.staging-zeta-hgi-core: &staging-zeta-hgi-core-def
  variables:
    ENV: "staging"
    REGION: "zeta"
    SETUP: "hgi-core"
  only:
    - develop
    - staging-zeta-hgi-core
  
.production-zeta-hgi: &production-zeta-hgi-def
  variables:
    ENV: "production"
    REGION: "zeta"
    SETUP: "hgi"
  only:
    - master
    - production-zeta-hgi
  
.staging-zeta-hgi: &staging-zeta-hgi-def
  variables:
    ENV: "staging"
    REGION: "zeta"
    SETUP: "hgi"
  only:
    - develop
    - staging-zeta-hgi
  
.production-zeta-hgiarvados-core: &production-zeta-hgiarvados-core-def
  variables:
    ENV: "production"
    REGION: "zeta"
    SETUP: "hgiarvados-core"
  only:
    - master
    - production-zeta-hgiarvados-core
  
.staging-zeta-hgiarvados-core: &staging-zeta-hgiarvados-core-def
  variables:
    ENV: "staging"
    REGION: "zeta"
    SETUP: "hgiarvados-core"
  only:
    - develop
    - staging-zeta-hgiarvados-core

.production-zeta-hgiarvados: &production-zeta-hgiarvados-def
  variables:
    ENV: "production"
    REGION: "zeta"
    SETUP: "hgiarvados"
  only:
    - master
    - production-zeta-hgiarvados
  
.staging-zeta-hgiarvados: &staging-zeta-hgiarvados-def
  variables:
    ENV: "staging"
    REGION: "zeta"
    SETUP: "hgiarvados"
  only:
    - develop
    - staging-zeta-hgiarvados

.production-zeta-hgiarvados-wlly8-core: &production-zeta-hgiarvados-wlly8-core-def
  variables:
    ENV: "production"
    REGION: "zeta"
    SETUP: "hgiarvados-wlly8-core"
  only:
    - master
    - production-zeta-hgiarvados-wlly8-core
  
.staging-zeta-hgiarvados-wlly8-core: &staging-zeta-hgiarvados-wlly8-core-def
  variables:
    ENV: "staging"
    REGION: "zeta"
    SETUP: "hgiarvados-wlly8-core"
  only:
    - develop
    - staging-zeta-hgiarvados-wlly8-core

.production-zeta-hgiarvados-wlly8: &production-zeta-hgiarvados-wlly8-def
  variables:
    ENV: "production"
    REGION: "zeta"
    SETUP: "hgiarvados-wlly8"
  only:
    - master
    - production-zeta-hgiarvados-wlly8
  
.staging-zeta-hgiarvados-wlly8: &staging-zeta-hgiarvados-wlly8-def
  variables:
    ENV: "staging"
    REGION: "zeta"
    SETUP: "hgiarvados-wlly8"
  only:
    - develop
    - staging-zeta-hgiarvados-wlly8

.production-zeta-hgiarvados-bbpin-core: &production-zeta-hgiarvados-bbpin-core-def
  variables:
    ENV: "production"
    REGION: "zeta"
    SETUP: "hgiarvados-bbpin-core"
  only:
    - master
    - production-zeta-hgiarvados-bbpin-core

.staging-zeta-hgiarvados-bbpin-core: &staging-zeta-hgiarvados-bbpin-core-def
  variables:
    ENV: "staging"
    REGION: "zeta"
    SETUP: "hgiarvados-bbpin-core"
  only:
    - develop
    - staging-zeta-hgiarvados-bbpin-core

.production-zeta-hgiarvados-bbpin: &production-zeta-hgiarvados-bbpin-def
  variables:
    ENV: "production"
    REGION: "zeta"
    SETUP: "hgiarvados-bbpin"
  only:
    - master
    - production-zeta-hgiarvados-bbpin

.staging-zeta-hgiarvados-bbpin: &staging-zeta-hgiarvados-bbpin-def
  variables:
    ENV: "staging"
    REGION: "zeta"
    SETUP: "hgiarvados-bbpin"
  only:
    - develop
    - staging-zeta-hgiarvados-bbpin


###############################################################################
# Stage: ci-setup
###############################################################################
build_docker_images:
  # Do not execute the before script
  before_script: []
  stage: ci-setup
  tags:
    - docker-privileged
  image:
    name: mercury/thrifty-builder
    entrypoint: [""]
  script:
    - ci/build-docker-images.sh


###############################################################################
# Stage: bootstrap-validate
###############################################################################
validate_s3:
  stage: bootstrap-validate
  tags:
   - docker
  image: mercury/taos
  script:
    - "ci/validate-s3.sh"
  only:
    - master

.openstack-vars-validate: &openstack-vars-validate-def
  stage: bootstrap-validate
  tags:
    - docker
  image: mercury/taos
  script:
    - 'test -n "${OS_AUTH_URL}" || (echo "OS_AUTH_URL must be set!"; exit 1)'
    - 'test -n "${OS_USERNAME}" || test -n "${OS_USERID}" || (echo "OS_USERNAME or OS_USERID must be set!"; exit 1)'
    - 'test -n "${OS_PASSWORD}" || (echo "OS_PASSWORD must be set!"; exit 1)'
    - 'test -n "${OS_TENANT_NAME}" || (echo "OS_TENANT_NAME must be set!"; exit 1)'
    - '((echo "${OS_AUTH_URL}" | grep -q "v3") && (test -n "${OS_DOMAIN_NAME}" || test -n "${OS_DOMAIN_ID}" || echo "WARNING: OS_DOMAIN_ID or OS_DOMAIN_NAME not set")) || exit 0'
  dependencies: []

openstack-vars-validate-production-zeta-hgi-core:
  <<: *openstack-vars-validate-def
  <<: *production-zeta-hgi-core-def
    
openstack-vars-validate-staging-zeta-hgi-core:
  <<: *openstack-vars-validate-def
  <<: *staging-zeta-hgi-core-def
    
openstack-vars-validate-production-zeta-hgi:
  <<: *openstack-vars-validate-def
  <<: *production-zeta-hgi-def
    
openstack-vars-validate-staging-zeta-hgi:
  <<: *openstack-vars-validate-def
  <<: *staging-zeta-hgi-def
    
openstack-vars-validate-production-zeta-hgiarvados-core:
  <<: *openstack-vars-validate-def
  <<: *production-zeta-hgiarvados-core-def
    
openstack-vars-validate-staging-zeta-hgiarvados-core:
  <<: *openstack-vars-validate-def
  <<: *staging-zeta-hgiarvados-core-def

openstack-vars-validate-production-zeta-hgiarvados:
  <<: *openstack-vars-validate-def
  <<: *production-zeta-hgiarvados-def
    
openstack-vars-validate-staging-zeta-hgiarvados:
  <<: *openstack-vars-validate-def
  <<: *staging-zeta-hgiarvados-def

#openstack-vars-validate-production-zeta-hgiarvados-wlly8-core:
#  <<: *openstack-vars-validate-def
#  <<: *production-zeta-hgiarvados-wlly8-core-def
#    
#openstack-vars-validate-staging-zeta-hgiarvados-wlly8-core:
#  <<: *openstack-vars-validate-def
#  <<: *staging-zeta-hgiarvados-wlly8-core-def
#
#openstack-vars-validate-production-zeta-hgiarvados-wlly8:
#  <<: *openstack-vars-validate-def
#  <<: *production-zeta-hgiarvados-wlly8-def
#    
#openstack-vars-validate-staging-zeta-hgiarvados-wlly8:
#  <<: *openstack-vars-validate-def
#  <<: *staging-zeta-hgiarvados-wlly8-def
#
#openstack-vars-validate-production-zeta-hgiarvados-bbpin-core:
#  <<: *openstack-vars-validate-def
#  <<: *production-zeta-hgiarvados-bbpin-core-def
#    
#openstack-vars-validate-staging-zeta-hgiarvados-bbpin-core:
#  <<: *openstack-vars-validate-def
#  <<: *staging-zeta-hgiarvados-bbpin-core-def
#
#openstack-vars-validate-production-zeta-hgiarvados-bbpin:
#  <<: *openstack-vars-validate-def
#  <<: *production-zeta-hgiarvados-bbpin-def
#    
#openstack-vars-validate-staging-zeta-hgiarvados-bbpin:
#  <<: *openstack-vars-validate-def
#  <<: *staging-zeta-hgiarvados-bbpin-def


###############################################################################
# Stage: bootstrap
###############################################################################
.ansible-bootstrap: &ansible-bootstrap-def
  stage: bootstrap
  tags:
    - docker
  image: mercury/taos
  script:
    - ci/ansible-bootstrap.sh
  cache:
    paths:
    - tmp
  artifacts:
    paths:
      - artifacts
    when: always
  dependencies: []

ansible-bootstrap-production-zeta-hgi:
  <<: *ansible-bootstrap-def
  <<: *production-zeta-hgi-core-def


###############################################################################
# Stage: validate
###############################################################################
# XXX: This isn't really a pure validation job as it will change the environment to make it valid
.os_images_validate: &os-images-validate-def
  stage: bootstrap-validate
  tags:
    - docker
  image: mercury/os3
  script:
    - ci/terraform-prepare-os-images.py ${S3_IMAGE_BUCKET}
  dependencies: []

.terraform-validate: &terraform-validate-def
  stage: validate
  tags:
    - docker
  image: mercury/taos
  script:
    - ci/terraform-validate.sh
  dependencies: []

terraform-validate-production-zeta-hgi-core:
  <<: *terraform-validate-def
  <<: *production-zeta-hgi-core-def
    
terraform-validate-staging-zeta-hgi-core:
  <<: *terraform-validate-def
  <<: *staging-zeta-hgi-core-def
    
terraform-validate-production-zeta-hgi:
  <<: *terraform-validate-def
  <<: *production-zeta-hgi-def
    
terraform-validate-staging-zeta-hgi:
  <<: *terraform-validate-def
  <<: *staging-zeta-hgi-def
    
terraform-validate-production-zeta-hgiarvados-core:
  <<: *terraform-validate-def
  <<: *production-zeta-hgiarvados-core-def
    
terraform-validate-staging-zeta-hgiarvados-core:
  <<: *terraform-validate-def
  <<: *staging-zeta-hgiarvados-core-def

terraform-validate-production-zeta-hgiarvados:
  <<: *terraform-validate-def
  <<: *production-zeta-hgiarvados-def
    
terraform-validate-staging-zeta-hgiarvados:
  <<: *terraform-validate-def
  <<: *staging-zeta-hgiarvados-def

#terraform-validate-production-zeta-hgiarvados-wlly8-core:
#  <<: *terraform-validate-def
#  <<: *production-zeta-hgiarvados-wlly8-core-def
#    
#terraform-validate-staging-zeta-hgiarvados-wlly8-core:
#  <<: *terraform-validate-def
#  <<: *staging-zeta-hgiarvados-wlly8-core-def
#
#terraform-validate-production-zeta-hgiarvados-wlly8:
#  <<: *terraform-validate-def
#  <<: *production-zeta-hgiarvados-wlly8-def
#    
#terraform-validate-staging-zeta-hgiarvados-wlly8:
#  <<: *terraform-validate-def
#  <<: *staging-zeta-hgiarvados-wlly8-def
#
#terraform-validate-production-zeta-hgiarvados-bbpin-core:
#  <<: *terraform-validate-def
#  <<: *production-zeta-hgiarvados-bbpin-core-def
#
#terraform-validate-staging-zeta-hgiarvados-bbpin-core:
#  <<: *terraform-validate-def
#  <<: *staging-zeta-hgiarvados-bbpin-core-def
#
#terraform-validate-production-zeta-hgiarvados-bbpin:
#  <<: *terraform-validate-def
#  <<: *production-zeta-hgiarvados-bbpin-def
#
#terraform-validate-staging-zeta-hgiarvados-bbpin:
#  <<: *terraform-validate-def
#  <<: *staging-zeta-hgiarvados-bbpin-def

terraform-validate-modules:
  stage: validate
  tags:
    - docker
  image: mercury/taos
  script:
    - ci/terraform-fmt.sh "terraform/modules"
  dependencies: []


###############################################################################
# Common Terraform setup
###############################################################################
.terraform-common: &terraform-common-def
  tags:
    - docker
  image: mercury/taos
  script:
    - OS_AUTH_VERSION=3 ci/terraform-plan-apply.sh
  artifacts:
    paths:
      - artifacts
    when: always


###############################################################################
# Stage: terraform-core
###############################################################################
.terraform-core: &terraform-core-def
  <<: *terraform-common-def
  stage: terraform-core
  tags:
    - docker-privileged
  dependencies: []

terraform-production-zeta-hgi-core:
  <<: *terraform-core-def
  <<: *production-zeta-hgi-core-def

terraform-staging-zeta-hgi-core:
  <<: *terraform-core-def
  <<: *staging-zeta-hgi-core-def

terraform-production-zeta-hgiarvados-core:
  <<: *terraform-core-def
  <<: *production-zeta-hgiarvados-core-def

terraform-staging-zeta-hgiarvados-core:
  <<: *terraform-core-def
  <<: *staging-zeta-hgiarvados-core-def

#terraform-production-zeta-hgiarvados-wlly8-core:
#  <<: *terraform-core-def
#  <<: *production-zeta-hgiarvados-wlly8-core-def
#
#terraform-staging-zeta-hgiarvados-wlly8-core:
#  <<: *terraform-core-def
#  <<: *staging-zeta-hgiarvados-wlly8-core-def
#
#terraform-production-zeta-hgiarvados-bbpin-core:
#  <<: *terraform-core-def
#  <<: *production-zeta-hgiarvados-bbpin-core-def
#
#terraform-staging-zeta-hgiarvados-bbpin-core:
#  <<: *terraform-core-def
#  <<: *staging-zeta-hgiarvados-bbpin-core-def


###############################################################################
# Stage: terraform
###############################################################################
.terraform: &terraform-def
  <<: *terraform-common-def
  stage: terraform
  dependencies: []

terraform-production-zeta-hgi:
  <<: *terraform-def
  <<: *production-zeta-hgi-def

terraform-staging-zeta-hgi:
  <<: *terraform-def
  <<: *staging-zeta-hgi-def

terraform-production-zeta-hgiarvados:
  <<: *terraform-def
  <<: *production-zeta-hgiarvados-def

terraform-staging-zeta-hgiarvados:
  <<: *terraform-def
  <<: *staging-zeta-hgiarvados-def

#terraform-production-zeta-hgiarvados-wlly8:
#  <<: *terraform-def
#  <<: *production-zeta-hgiarvados-wlly8-def
#
#terraform-staging-zeta-hgiarvados-wlly8:
#  <<: *terraform-def
#  <<: *staging-zeta-hgiarvados-wlly8-def
#
#terraform-production-zeta-hgiarvados-bbpin:
#  <<: *terraform-def
#  <<: *production-zeta-hgiarvados-bbpin-def
#
#terraform-staging-zeta-hgiarvados-bbpin:
#  <<: *terraform-def
#  <<: *staging-zeta-hgiarvados-bbpin-def


###############################################################################
# Common Ansible setup
###############################################################################
.ansible-common: &ansible-common-def
  tags:
    - docker
  image: mercury/taos
  script:
    - ci/ansible-locked.sh
  artifacts:
    paths:
      - artifacts
    when: always

###############################################################################
# Stage: ansible-core
###############################################################################
.ansible-core: &ansible-core-def
  <<: *ansible-common-def
  stage: ansible-core
  dependencies: []

ansible-production-zeta-hgi-core:
  <<: *ansible-core-def
  <<: *production-zeta-hgi-core-def

ansible-staging-zeta-hgi-core:
  <<: *ansible-core-def
  <<: *staging-zeta-hgi-core-def

#ansible-production-zeta-hgiarvados-core:
#  <<: *ansible-core-def
#  <<: *production-zeta-hgiarvados-core-def
#
#ansible-staging-zeta-hgiarvados-core:
#  <<: *ansible-core-def
#  <<: *staging-zeta-hgiarvados-core-def
#
#ansible-production-zeta-hgiarvados-wlly8-core:
#  <<: *ansible-core-def
#  <<: *production-zeta-hgiarvados-wlly8-core-def
#
#ansible-staging-zeta-hgiarvados-wlly8-core:
#  <<: *ansible-core-def
#  <<: *staging-zeta-hgiarvados-wlly8-core-def
#
#ansible-production-zeta-hgiarvados-bbpin-core:
#  <<: *ansible-core-def
#  <<: *production-zeta-hgiarvados-bbpin-core-def
#
#ansible-staging-zeta-hgiarvados-bbpin-core:
#  <<: *ansible-core-def
#  <<: *staging-zeta-hgiarvados-bbpin-core-def


###############################################################################
# Stage: ansible
###############################################################################
.ansible: &ansible-def
  <<: *ansible-common-def
  stage: ansible
  dependencies: []

ansible-production-zeta-hgi:
  <<: *ansible-def
  <<: *production-zeta-hgi-def

ansible-staging-zeta-hgi:
  <<: *ansible-def
  <<: *staging-zeta-hgi-def

#ansible-production-zeta-hgiarvados:
#  <<: *ansible-def
#  <<: *production-zeta-hgiarvados-def
#
#ansible-staging-zeta-hgiarvados:
#  <<: *ansible-def
#  <<: *staging-zeta-hgiarvados-def
#
#ansible-production-zeta-hgiarvados-wlly8:
#  <<: *ansible-def
#  <<: *production-zeta-hgiarvados-wlly8-def
#
#ansible-staging-zeta-hgiarvados-wlly8:
#  <<: *ansible-def
#  <<: *staging-zeta-hgiarvados-wlly8-def
#
#ansible-production-zeta-hgiarvados-bbpin:
#  <<: *ansible-def
#  <<: *production-zeta-hgiarvados-bbpin-def
#
#ansible-staging-zeta-hgiarvados-bbpin:
#  <<: *ansible-def
#  <<: *staging-zeta-hgiarvados-bbpin-def


###############################################################################
# Stage: sync
###############################################################################
github-sync:
  stage: sync
  tags:
    - docker
  image: mercury/gitlab-ci-git-push
  script:
    - git checkout origin/master && subrepos/gitlab-ci-git-push/git-push ${GITHUB_REPO} ${CI_COMMIT_REF_NAME}
  dependencies: []
  only:
    - master
